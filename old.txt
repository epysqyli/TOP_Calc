function calculate() {
    if ((inputList.length == 2) && (opOrder[0] == 'add')) {
        intRes = operate(add, inputList[0], inputList[1]);
        while (inputList.length > 0) inputList.pop();
        inputList.push(intRes);
        opOrder.splice(0, 1);
        return intRes;
    }
    if ((inputList.length == 2) && (opOrder[0] == 'subtract')) {
        intRes = operate(subtract, inputList[0], inputList[1]);
        while (inputList.length > 0) inputList.pop();
        inputList.push(intRes);
        opOrder.splice(0, 1);
        return intRes;
    }
    if ((inputList.length == 2) && (opOrder[0] == 'multiply')) {
        intRes = operate(multiply, inputList[0], inputList[1]);
        while (inputList.length > 0) inputList.pop();
        inputList.push(intRes);
        opOrder.splice(0, 1);
        return intRes;
    }
    if ((inputList.length == 2) && (opOrder[0] == 'divide')) {
        intRes = operate(divide, inputList[0], inputList[1]);
        while (inputList.length > 0) inputList.pop();
        inputList.push(intRes);
        opOrder.splice(0, 1);
        return intRes;
    }
}


if (inputList.length == 2) {
    if (opOrder[0] == 'add') {
        intRes = operate(add, inputList[0], inputList[1]);
        while (inputList.length > 0) inputList.pop();
        inputList.push(intRes);
        opOrder.splice(0, 1);
    }
    else if (opOrder[0] == 'subtract') {
        intRes = operate(subtract, inputList[0], inputList[1]);
        while (inputList.length > 0) inputList.pop();
        inputList.push(intRes);
        opOrder.splice(0, 1);
    }
    else if (opOrder[0] == 'multiply') {
        intRes = operate(multiply, inputList[0], inputList[1]);
        while (inputList.length > 0) inputList.pop();
        inputList.push(intRes);
        opOrder.splice(0, 1);
    }
    else if (opOrder[0] == 'divide') {
        intRes = operate(divide, inputList[0], inputList[1]);
        while (inputList.length > 0) inputList.pop();
        inputList.push(intRes);
        opOrder.splice(0, 1);
    }
}


To do list:

    Users should be able to string together several operations and get the right answer, with each pair of numbers being evaluated at a time. For example, 12 + 7 - 5 * 3 = should yield 42. An example of the behavior we’re looking for would be this student solution. Note Your calculator should not evaluate more than a single pair of numbers at a time. If you enter a number then an operator and another number that calculation should be displayed if your next input is an operator. The result of the calculation should be used as the first number in your new calculation.
    
    You should round answers with long decimals so that they don’t overflow the screen.
    
    Pressing = before entering all of the numbers or an operator could cause problems!
    
    Pressing “clear” should wipe out any existing data.. make sure the user is really starting fresh after pressing “clear”
    
    Display a snarky error message if the user tries to divide by 0… don’t let it crash your calculator!

